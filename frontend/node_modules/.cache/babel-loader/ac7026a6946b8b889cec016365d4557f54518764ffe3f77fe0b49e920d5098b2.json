{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nconst Login = () => {\n  _s();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleUserLogin = () => {\n    return fetch('/login_user', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Invalid username or password');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n      throw error; // Rethrow the error to continue with admin login\n    });\n  };\n\n  const handleAdminLogin = () => {\n    return fetch('/login_admin', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Invalid admin credentials');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n      throw error; // Rethrow the error to handle login failure\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleUserLogin().then(data => {\n      console.log(data);\n      if (data.isAdmin) {\n        history.push('/admin_dashboard');\n      } else {\n        history.push('/hotels');\n      }\n    }).catch(error => {\n      console.error('User login failed. Trying admin login...');\n      handleAdminLogin().then(data => {\n        console.log(data);\n        history.push('/admin_dashboard');\n      }).catch(error => {\n        console.error('Admin login failed:', error);\n        // Handle login failure, e.g., display an error message\n      });\n    });\n  };\n};\n_s(Login, \"H4gXrCoHLhiMVNICxu+h4zBHttg=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useHistory","Login","_s","history","username","setUsername","password","setPassword","handleUserLogin","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Error","catch","error","console","handleAdminLogin","handleSubmit","e","preventDefault","data","log","isAdmin","push","_c","$RefreshReg$"],"sources":["/home/raguri/Moringa stuff/phase-4/phase4-project/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = () => {\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleUserLogin = () => {\n    return fetch('/login_user', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Invalid username or password');\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n        throw error; // Rethrow the error to continue with admin login\n      });\n  };\n\n  const handleAdminLogin = () => {\n    return fetch('/login_admin', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Invalid admin credentials');\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n        throw error; // Rethrow the error to handle login failure\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    handleUserLogin()\n      .then((data) => {\n        console.log(data);\n        if (data.isAdmin) {\n          history.push('/admin_dashboard');\n        } else {\n          history.push('/hotels');\n        }\n      })\n      .catch((error) => {\n        console.error('User login failed. Trying admin login...');\n        handleAdminLogin()\n          .then((data) => {\n            console.log(data);\n            history.push('/admin_dashboard');\n          })\n          .catch((error) => {\n            console.error('Admin login failed:', error);\n            // Handle login failure, e.g., display an error message\n          });\n      });\n  };\n \n\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}